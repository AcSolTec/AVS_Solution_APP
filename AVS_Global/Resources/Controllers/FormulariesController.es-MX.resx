<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btn.next" xml:space="preserve">
    <value>Siguiente</value>
  </data>
  <data name="btn.prev" xml:space="preserve">
    <value>Anterior</value>
  </data>
  <data name="but.Return" xml:space="preserve">
    <value>Regresar a formularios</value>
  </data>
  <data name="formCU.addr" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="formCU.bloq1" xml:space="preserve">
    <value>Las tarjetas de turista para Cuba no se pueden cancelar ni devolver. La tarjeta cuesta 65 CHF para adultos y 50 CHF para niños de hasta 16 años. Los costos no son reembolsables. He leído y acepto estas condiciones</value>
  </data>
  <data name="formCU.bloq2" xml:space="preserve">
    <value>Esta tarjeta de turista no será válida si viaja desde / hacia los EE. UU. a Cuba. En este caso, debe obtener la tarjeta directamente en los EE. UU.</value>
  </data>
  <data name="formCU.bloq3" xml:space="preserve">
    <value>El pasaporte debe ser válido por al menos 6 meses después del regreso de Cuba.</value>
  </data>
  <data name="formCU.chf22" xml:space="preserve">
    <value>Correo expreso suizo: 22.00 CHF</value>
  </data>
  <data name="formCU.chf5" xml:space="preserve">
    <value>A-Post Plus (asegurado, entrega sin firma),: 5.00 CHF</value>
  </data>
  <data name="formCU.chf750" xml:space="preserve">
    <value>Correo certificado Suizo: 7.50 CHF</value>
  </data>
  <data name="formCU.chfnatint" xml:space="preserve">
    <value>Transporte nacional y internacional: Precio en solicitud</value>
  </data>
  <data name="formCU.dtDep" xml:space="preserve">
    <value>Fecha de salida de Cuba</value>
  </data>
  <data name="formCU.dtEntry" xml:space="preserve">
    <value>Fecha de entrada en Cuba</value>
  </data>
  <data name="formCU.emad" xml:space="preserve">
    <value>Correo electrónico</value>
  </data>
  <data name="formCU.gtc1" xml:space="preserve">
    <value>He leído </value>
  </data>
  <data name="formCU.gtc2" xml:space="preserve">
    <value>y estoy de acuerdo con las condiciones </value>
  </data>
  <data name="formCU.mailestb" xml:space="preserve">
    <value>Correo</value>
  </data>
  <data name="formCU.name" xml:space="preserve">
    <value>Nombre(s)</value>
  </data>
  <data name="formCU.No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="formCU.numAd" xml:space="preserve">
    <value>Adultos</value>
  </data>
  <data name="formCU.numChi" xml:space="preserve">
    <value>Menores de edad (0-16 años)</value>
  </data>
  <data name="formCU.numsAC" xml:space="preserve">
    <value>Adultos</value>
  </data>
  <data name="formCU.pssAd" xml:space="preserve">
    <value>Menores de edad (0-16 años)</value>
  </data>
  <data name="formCU.pssCh" xml:space="preserve">
    <value>Pasaporte(s) para adultos</value>
  </data>
  <data name="formCU.reInf" xml:space="preserve">
    <value>He leído esta información y confirmo que soy consciente de que cualquier error en los detalles del pasaporte proporcionados en mi solicitud resultará en la entrada de Cuba en un punto de cruce fronterizo.</value>
  </data>
  <data name="formCU.shipAd" xml:space="preserve">
    <value>Pasaporte(s) para menores de edad</value>
  </data>
  <data name="formCU.shipTo" xml:space="preserve">
    <value>¿Es la dirección de entrega diferente de la dirección de contacto?</value>
  </data>
  <data name="formCU.surname" xml:space="preserve">
    <value>Apellido(s)</value>
  </data>
  <data name="formCU.tbDep" xml:space="preserve">
    <value>Fec. Salida</value>
  </data>
  <data name="formCU.tbEntry" xml:space="preserve">
    <value>Fec. Entrada</value>
  </data>
  <data name="formCU.tbName" xml:space="preserve">
    <value>Nom(s)</value>
  </data>
  <data name="formCU.tbNumAdl" xml:space="preserve">
    <value># Adultos</value>
  </data>
  <data name="formCU.tbNumChld" xml:space="preserve">
    <value># Niños</value>
  </data>
  <data name="formCU.tbSure" xml:space="preserve">
    <value>Ap(s)</value>
  </data>
  <data name="formCU.tbTel" xml:space="preserve">
    <value>Tel</value>
  </data>
  <data name="formCU.TitSum" xml:space="preserve">
    <value>Información importante</value>
  </data>
  <data name="formCU.tnum" xml:space="preserve">
    <value>Número de teléfono</value>
  </data>
  <data name="formCU.twn" xml:space="preserve">
    <value>Ciudad</value>
  </data>
  <data name="formCU.yes" xml:space="preserve">
    <value>Si</value>
  </data>
  <data name="formCU.zc" xml:space="preserve">
    <value>Código Postal</value>
  </data>
  <data name="navBar.lan" xml:space="preserve">
    <value>Elige un idioma</value>
  </data>
  <data name="steps.cd" xml:space="preserve">
    <value>Detalles de Contacto</value>
  </data>
  <data name="steps.pay" xml:space="preserve">
    <value>Pago</value>
  </data>
  <data name="steps.sk.pi" xml:space="preserve">
    <value>Información Personal</value>
  </data>
  <data name="steps.sk.ri" xml:space="preserve">
    <value>Información Requerida</value>
  </data>
  <data name="steps.sk.uf" xml:space="preserve">
    <value>Carga de Archivos</value>
  </data>
  <data name="steps.sum" xml:space="preserve">
    <value>Resumen</value>
  </data>
  <data name="steps.ts" xml:space="preserve">
    <value>Detalles de viaje y envio</value>
  </data>
</root>