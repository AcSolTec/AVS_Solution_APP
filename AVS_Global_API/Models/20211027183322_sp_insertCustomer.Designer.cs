// <auto-generated />
using System;
using AVS_Global_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AVS_Global_API.Models
{
    [DbContext(typeof(AVS_DBContext))]
    [Migration("20211027183322_sp_insertCustomer")]
    partial class sp_insertCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AVS_Global_API.Models.Nationality", b =>
                {
                    b.Property<int>("IdNat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitActive")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nationality");

                    b.HasKey("IdNat")
                        .HasName("PK__National__0DD1BD9D38236858");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbAcompanyingFamily", b =>
                {
                    b.Property<int>("IdAcomp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdFam")
                        .HasColumnType("int");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdAcomp")
                        .HasName("PK__tb_acomp__73BF010EF2BEAC76");

                    b.HasIndex("IdFam");

                    b.ToTable("tb_acompanying_family");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbAvsSecurityOption", b =>
                {
                    b.Property<int>("IdCon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitActive")
                        .HasColumnType("bit");

                    b.Property<string>("KeyAcc")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Value")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("IdCon")
                        .HasName("PK__tb_avs_s__0FA7F29554ACA670");

                    b.ToTable("tb_avs_security_options");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbBankFamily", b =>
                {
                    b.Property<int>("IdBank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acnumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ACNumber");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Branch")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdFam")
                        .HasColumnType("int");

                    b.Property<string>("NameBank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VerifierDetails")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdBank")
                        .HasName("PK__tb_bank___3EA5E6846502C30A");

                    b.HasIndex("IdFam");

                    b.ToTable("tb_bank_family");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbCatCountry", b =>
                {
                    b.Property<int>("IdCatCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitActive")
                        .HasColumnType("bit");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdCatCountry")
                        .HasName("PK__tb_cat_c__4DE1A84C90C607A9");

                    b.ToTable("tb_cat_countries");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbChildrensFamiliy", b =>
                {
                    b.Property<int>("IdChild")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateOfBith")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdFam")
                        .HasColumnType("int");

                    b.Property<string>("NameChild")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdChild")
                        .HasName("PK__tb_child__F287C37AB7B5F93F");

                    b.HasIndex("IdFam");

                    b.ToTable("tb_childrens_familiy");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbConctactDetail", b =>
                {
                    b.Property<int>("IdConctact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitSponsor")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdCatCountry")
                        .HasColumnType("int");

                    b.Property<int?>("IdForm")
                        .HasColumnType("int");

                    b.Property<string>("TelHome")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelWork")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdConctact")
                        .HasName("PK__tb_conct__FE86941A3F0EAD1D");

                    b.HasIndex("IdCatCountry");

                    b.HasIndex("IdForm");

                    b.ToTable("tb_conctactDetails");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbConvictionsTravel", b =>
                {
                    b.Property<int>("IdConviction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateConvict")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdCatCountry")
                        .HasColumnType("int");

                    b.Property<int?>("IdTravel")
                        .HasColumnType("int");

                    b.Property<string>("Offence")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sentence")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdConviction")
                        .HasName("PK__tb_convi__BB66B6C10ACED89B");

                    b.HasIndex("IdCatCountry");

                    b.ToTable("tb_convictions_travel");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbCountry", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateOfEntry")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCountry")
                        .HasName("PK__tb_count__F99F104DCFDE2AE5");

                    b.ToTable("tb_countries");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbCustomersAv", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfEntry")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateValidity")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCountry")
                        .HasColumnType("int");

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredMail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Seed")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdCustomer")
                        .HasName("PK__tb_custo__DB43864A360AF245");

                    b.HasIndex("IdCountry");

                    b.ToTable("tb_customersAVS");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbDeportedTravel", b =>
                {
                    b.Property<int>("IdDeport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateDeport")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdCatCountry")
                        .HasColumnType("int");

                    b.Property<int?>("IdTravel")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReferenceNum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdDeport")
                        .HasName("PK__tb_depor__98DD67CA34F748FB");

                    b.HasIndex("IdCatCountry");

                    b.ToTable("tb_deported_travel");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbFamilyDetail", b =>
                {
                    b.Property<int>("IdFam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitAccountBank")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitAcompany")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitChildrens")
                        .HasColumnType("bit");

                    b.Property<string>("DateBirth")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdForm")
                        .HasColumnType("int");

                    b.Property<int?>("IdNatFather")
                        .HasColumnType("int");

                    b.Property<int?>("IdNatMother")
                        .HasColumnType("int");

                    b.Property<int?>("IdNatSpouse")
                        .HasColumnType("int");

                    b.Property<string>("InfoEmployerSpouse")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nmother")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NMother");

                    b.Property<string>("Npather")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NPather");

                    b.Property<string>("PlaceBirth")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Profesion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SpouseName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdFam")
                        .HasName("PK__tb_famil__0FE27A0CC5BBB0E7");

                    b.HasIndex("IdForm");

                    b.ToTable("tb_family_details");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbFormulary", b =>
                {
                    b.Property<int>("IdForm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfEntry")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int?>("IdStatus")
                        .HasColumnType("int");

                    b.HasKey("IdForm")
                        .HasName("PK__tb_formu__007D03D9C6710911");

                    b.HasIndex("IdCountry");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdStatus");

                    b.ToTable("tb_formularies");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbPassportDetail", b =>
                {
                    b.Property<int>("IdPassport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfChange")
                        .HasColumnType("datetime");

                    b.Property<string>("DateOfExpiry")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DateOfIssue")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("IdForm")
                        .HasColumnType("int");

                    b.Property<int?>("IdTypePass")
                        .HasColumnType("int");

                    b.Property<string>("IssuingAuth")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PlaceOfIssue")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("TravelDocs")
                        .HasColumnType("bit");

                    b.HasKey("IdPassport")
                        .HasName("PK__tb_passp__BAAF27F74E7C5F5F");

                    b.HasIndex("IdForm");

                    b.ToTable("tb_passportDetails");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbPastJob", b =>
                {
                    b.Property<int>("IdpJob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DateFinish")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DateStart")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Depto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescAddContr")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Designation")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Duties")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdForm")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdpJob")
                        .HasName("PK__tb_pastJ__AC33AD230C5DEFBC");

                    b.HasIndex("IdForm");

                    b.ToTable("tb_pastJobs");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbPersonalDatum", b =>
                {
                    b.Property<int>("IdPd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPD")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CityBirth")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DateBirth")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("DateOfChange")
                        .HasColumnType("datetime");

                    b.Property<string>("DetailOfProfesion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("IdCatCountry")
                        .HasColumnType("int");

                    b.Property<int?>("IdForm")
                        .HasColumnType("int");

                    b.Property<string>("IdMark")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Religion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TypeNationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("TypeSex")
                        .HasColumnType("bit");

                    b.HasKey("IdPd")
                        .HasName("PK__tb_perso__B7703B3FCDDDEE11");

                    b.HasIndex("IdCatCountry");

                    b.HasIndex("IdForm");

                    b.ToTable("tb_personalData");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbRole", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitActive")
                        .HasColumnType("bit");

                    b.Property<string>("NameRol")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol")
                        .HasName("PK__tb_roles__2A49584C0E1E7FA4");

                    b.ToTable("tb_roles");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbSponsor", b =>
                {
                    b.Property<int>("IdSponsor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("IdConctact")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelHome")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelPhone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TelWork")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdSponsor")
                        .HasName("PK__tb_spons__9804FEEF0B3FB971");

                    b.HasIndex("IdConctact");

                    b.ToTable("tb_sponsors");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbStatusForm", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitActive")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdStatus")
                        .HasName("PK__tb_statu__B450643A87EF6ED8");

                    b.ToTable("tb_status_forms");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbTravelHistory", b =>
                {
                    b.Property<int>("IdTravel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("BitConviction")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitRefusedPakistan")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitRemoveCountry")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitVisCountries")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitVisPakistan")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitVisRefused")
                        .HasColumnType("bit");

                    b.Property<string>("DateTravel")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DescRefused")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Duration")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("IdForm")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTravel")
                        .HasName("PK__tb_trave__FF923C231E8C1BCE");

                    b.HasIndex("IdForm");

                    b.ToTable("tb_travel_history");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbTypesPassport", b =>
                {
                    b.Property<int>("IdTypePass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypePass")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdTypePass")
                        .HasName("PK__tb_types__562BAF6D2C851CAE");

                    b.ToTable("tb_types_passports");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbUrlActivation", b =>
                {
                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdUrl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ValueUrl")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasIndex("IdCustomer");

                    b.ToTable("tb_Url_activation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbUser", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfEntry")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateValidity")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("KeyAccess")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Pass")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Seed")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("IdUser")
                        .HasName("PK__tb_users__B7C92638C411223F");

                    b.HasIndex("IdRol");

                    b.ToTable("tb_users");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbAcompanyingFamily", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbFamilyDetail", "IdFamNavigation")
                        .WithMany("TbAcompanyingFamilies")
                        .HasForeignKey("IdFam")
                        .HasConstraintName("FK__tb_acompa__Addre__656C112C");

                    b.Navigation("IdFamNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbBankFamily", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbFamilyDetail", "IdFamNavigation")
                        .WithMany("TbBankFamilies")
                        .HasForeignKey("IdFam")
                        .HasConstraintName("FK__tb_bank_f__IdFam__68487DD7");

                    b.Navigation("IdFamNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbChildrensFamiliy", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbFamilyDetail", "IdFamNavigation")
                        .WithMany("TbChildrensFamiliys")
                        .HasForeignKey("IdFam")
                        .HasConstraintName("FK__tb_childr__IdFam__628FA481");

                    b.Navigation("IdFamNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbConctactDetail", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbCatCountry", "IdCatCountryNavigation")
                        .WithMany("TbConctactDetails")
                        .HasForeignKey("IdCatCountry")
                        .HasConstraintName("FK__tb_concta__IdCat__571DF1D5");

                    b.HasOne("AVS_Global_API.Models.TbFormulary", "IdFormNavigation")
                        .WithMany("TbConctactDetails")
                        .HasForeignKey("IdForm")
                        .HasConstraintName("FK__tb_concta__BitSp__5629CD9C");

                    b.Navigation("IdCatCountryNavigation");

                    b.Navigation("IdFormNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbConvictionsTravel", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbCatCountry", "IdCatCountryNavigation")
                        .WithMany("TbConvictionsTravels")
                        .HasForeignKey("IdCatCountry")
                        .HasConstraintName("FK__tb_convic__Sente__70DDC3D8");

                    b.Navigation("IdCatCountryNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbCustomersAv", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbCountry", "IdCountryNavigation")
                        .WithMany("TbCustomersAvs")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("FK__tb_custom__IdCou__4222D4EF");

                    b.Navigation("IdCountryNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbDeportedTravel", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbCatCountry", "IdCatCountryNavigation")
                        .WithMany("TbDeportedTravels")
                        .HasForeignKey("IdCatCountry")
                        .HasConstraintName("FK__tb_deport__Refer__6E01572D");

                    b.Navigation("IdCatCountryNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbFamilyDetail", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbFormulary", "IdFormNavigation")
                        .WithMany("TbFamilyDetails")
                        .HasForeignKey("IdForm")
                        .HasConstraintName("FK__tb_family__BitAc__5FB337D6");

                    b.Navigation("IdFormNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbFormulary", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbCountry", "IdCountryNavigation")
                        .WithMany("TbFormularies")
                        .HasForeignKey("IdCountry")
                        .HasConstraintName("FK__tb_formul__IdCou__4AB81AF0");

                    b.HasOne("AVS_Global_API.Models.TbCustomersAv", "IdCustomerNavigation")
                        .WithMany("TbFormularies")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("FK__tb_formul__IdCus__4BAC3F29");

                    b.HasOne("AVS_Global_API.Models.TbStatusForm", "IdStatusNavigation")
                        .WithMany("TbFormularies")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("FK__tb_formul__IdSta__4CA06362");

                    b.Navigation("IdCountryNavigation");

                    b.Navigation("IdCustomerNavigation");

                    b.Navigation("IdStatusNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbPassportDetail", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbFormulary", "IdFormNavigation")
                        .WithMany("TbPassportDetails")
                        .HasForeignKey("IdForm")
                        .HasConstraintName("FK__tb_passpo__DateO__534D60F1");

                    b.Navigation("IdFormNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbPastJob", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbFormulary", "IdFormNavigation")
                        .WithMany("TbPastJobs")
                        .HasForeignKey("IdForm")
                        .HasConstraintName("FK__tb_pastJo__IdFor__5CD6CB2B");

                    b.Navigation("IdFormNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbPersonalDatum", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbCatCountry", "IdCatCountryNavigation")
                        .WithMany("TbPersonalData")
                        .HasForeignKey("IdCatCountry")
                        .HasConstraintName("FK__tb_person__IdCat__5070F446");

                    b.HasOne("AVS_Global_API.Models.TbFormulary", "IdFormNavigation")
                        .WithMany("TbPersonalData")
                        .HasForeignKey("IdForm")
                        .HasConstraintName("FK__tb_person__IdFor__4F7CD00D");

                    b.Navigation("IdCatCountryNavigation");

                    b.Navigation("IdFormNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbSponsor", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbConctactDetail", "IdConctactNavigation")
                        .WithMany("TbSponsors")
                        .HasForeignKey("IdConctact")
                        .HasConstraintName("FK__tb_sponso__IdCon__59FA5E80");

                    b.Navigation("IdConctactNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbTravelHistory", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbFormulary", "IdFormNavigation")
                        .WithMany("TbTravelHistories")
                        .HasForeignKey("IdForm")
                        .HasConstraintName("FK__tb_travel__IdFor__6B24EA82");

                    b.Navigation("IdFormNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbUrlActivation", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbCustomersAv", "IdCustomerNavigation")
                        .WithMany()
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("FK__tb_Url_ac__IdCus__440B1D61");

                    b.Navigation("IdCustomerNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbUser", b =>
                {
                    b.HasOne("AVS_Global_API.Models.TbRole", "IdRolNavigation")
                        .WithMany("TbUsers")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__tb_users__IdRol__3F466844");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbCatCountry", b =>
                {
                    b.Navigation("TbConctactDetails");

                    b.Navigation("TbConvictionsTravels");

                    b.Navigation("TbDeportedTravels");

                    b.Navigation("TbPersonalData");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbConctactDetail", b =>
                {
                    b.Navigation("TbSponsors");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbCountry", b =>
                {
                    b.Navigation("TbCustomersAvs");

                    b.Navigation("TbFormularies");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbCustomersAv", b =>
                {
                    b.Navigation("TbFormularies");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbFamilyDetail", b =>
                {
                    b.Navigation("TbAcompanyingFamilies");

                    b.Navigation("TbBankFamilies");

                    b.Navigation("TbChildrensFamiliys");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbFormulary", b =>
                {
                    b.Navigation("TbConctactDetails");

                    b.Navigation("TbFamilyDetails");

                    b.Navigation("TbPassportDetails");

                    b.Navigation("TbPastJobs");

                    b.Navigation("TbPersonalData");

                    b.Navigation("TbTravelHistories");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbRole", b =>
                {
                    b.Navigation("TbUsers");
                });

            modelBuilder.Entity("AVS_Global_API.Models.TbStatusForm", b =>
                {
                    b.Navigation("TbFormularies");
                });
#pragma warning restore 612, 618
        }
    }
}
